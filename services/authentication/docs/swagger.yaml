basePath: /
definitions:
  domain.FlowType:
    enum:
    - websiteSession
    - rememberMe
    type: string
    x-enum-varnames:
    - WebsiteSessionFlow
    - RememberMeFlow
  domain.Tokens:
    properties:
      accessToken:
        type: string
      expiresIn:
        type: integer
      refreshToken:
        type: string
    type: object
  router.jwks:
    properties:
      keys:
        items:
          $ref: '#/definitions/router.key'
        type: array
    type: object
  router.key:
    properties:
      alg:
        type: string
      e:
        type: string
      kty:
        type: string
      "n":
        type: string
      use:
        type: string
    type: object
  router.loginPayload:
    properties:
      flow:
        $ref: '#/definitions/domain.FlowType'
      md5Password:
        type: string
      username:
        type: string
    type: object
  router.refreshPayload:
    properties:
      refreshToken:
        type: string
    type: object
  router.validationPayload:
    properties:
      accessToken:
        type: string
    type: object
host: localhost:8084
info:
  contact:
    name: Victor Springer
  description: Authentication Service for Movie Rating System.
  license:
    name: MIT License
  title: Authentication Service
  version: "1.0"
paths:
  /.well-known/jwks.json:
    get:
      consumes:
      - application/json
      description: Returns the JSON Web Key Set
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/router.jwks'
      summary: JSON Web Key Set
      tags:
      - authentication
  /anonymous:
    post:
      consumes:
      - application/json
      description: Generates anonymous tokens for a new user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Tokens'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login anonymously
      tags:
      - authentication
  /login:
    post:
      consumes:
      - application/json
      description: Generates tokens for an existing user
      parameters:
      - description: Login payload
        in: body
        name: loginPayload
        required: true
        schema:
          $ref: '#/definitions/router.loginPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Tokens'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login
      tags:
      - authentication
  /logout:
    post:
      consumes:
      - application/json
      description: Revokes the access token
      parameters:
      - description: Authorization header with Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Logout
      tags:
      - authentication
  /refresh:
    post:
      consumes:
      - application/json
      description: Refreshes existing tokens
      parameters:
      - description: Refresh payload
        in: body
        name: refreshPayload
        required: true
        schema:
          $ref: '#/definitions/router.refreshPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Tokens'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Refresh tokens
      tags:
      - authentication
  /validate:
    post:
      consumes:
      - application/json
      description: Validates the provided access token
      parameters:
      - description: Validation payload
        in: body
        name: validationPayload
        required: true
        schema:
          $ref: '#/definitions/router.validationPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Validate access token
      tags:
      - authentication
swagger: "2.0"
